<Page
    x:Class="OnmyojiHelper.Views.Stages.StagePage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Behaviors="using:Template10.Behaviors"
    xmlns:Core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:Interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:controls="using:Template10.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:converters="using:OnmyojiHelper.Converters"
    xmlns:local="using:OnmyojiHelper.Views"
    xmlns:m="using:OnmyojiHelper.Models"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:mg="using:OnmyojiHelper.Models.Groups"
    xmlns:mr="using:OnmyojiHelper.Models.Relations"
    xmlns:vm="using:OnmyojiHelper.ViewModels"
    xmlns:wuxdata="using:Windows.UI.Xaml.Data"
    mc:Ignorable="d">

    <Page.Resources>
        <converters:StageCategoryDescriptionConverter x:Key="StageCategoryDescriptionConverter" />
        <CollectionViewSource
            x:Name="cVSStageGroups"
            IsSourceGrouped="True"
            ItemsPath="Stages"
            Source="{Binding StageGroups}" />
        <DataTemplate x:Key="stageZoomInItemTemplate" x:DataType="m:Stage">
            <Grid>
                <TextBlock Text="{x:Bind Title}" />
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="stageZoomInGroupHeaderTemplate" x:DataType="mg:StageGroup">
            <TextBlock Text="{x:Bind Category, Converter={StaticResource StageCategoryDescriptionConverter}}" />
        </DataTemplate>
        <DataTemplate x:Key="stageZoomOutItemTemplate" x:DataType="wuxdata:ICollectionViewGroup">
            <TextBlock Text="{x:Bind Group.(mg:StageGroup.Category), Converter={StaticResource StageCategoryDescriptionConverter}}" />
        </DataTemplate>
        <DataTemplate x:Key="battleItemTemplate" x:DataType="m:Battle">
            <TextBlock Text="{x:Bind Title}" />
        </DataTemplate>
        <DataTemplate x:Key="shikigamiItemTemplate" x:DataType="mr:ShikigamiBattle">
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="{x:Bind Shikigami.Name}" />
                <TextBlock Text="{x:Bind Count}" />
            </StackPanel>
        </DataTemplate>
    </Page.Resources>

    <RelativePanel Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <controls:PageHeader
            x:Name="pageHeader"
            RelativePanel.AlignLeftWithPanel="True"
            RelativePanel.AlignRightWithPanel="True"
            RelativePanel.AlignTopWithPanel="True"
            Text="關卡" />

        <ProgressBar
            Width="150"
            Margin="5"
            IsIndeterminate="True"
            RelativePanel.Below="pageHeader"
            Visibility="{Binding IsLoading, Converter={StaticResource VisibilityWhenTrueConverter}, Mode=TwoWay}" />

        <Grid
            RelativePanel.AlignBottomWithPanel="True"
            RelativePanel.AlignLeftWithPanel="True"
            RelativePanel.AlignRightWithPanel="True"
            RelativePanel.Below="pageHeader"
            Visibility="{Binding IsLoading, Converter={StaticResource VisibilityWhenFalseConverter}, Mode=TwoWay}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <SemanticZoom Grid.Column="0" MinWidth="180">
                <SemanticZoom.ZoomedInView>
                    <ListView
                        x:Name="stageZoomInListView"
                        MinWidth="180"
                        ItemTemplate="{StaticResource stageZoomInItemTemplate}"
                        ItemsSource="{x:Bind cVSStageGroups.View, Mode=OneWay}"
                        SelectionMode="Single">
                        <ListView.GroupStyle>
                            <GroupStyle HeaderTemplate="{StaticResource stageZoomInGroupHeaderTemplate}" />
                        </ListView.GroupStyle>
                    </ListView>
                </SemanticZoom.ZoomedInView>
                <SemanticZoom.ZoomedOutView>
                    <ListView
                        x:Name="stageZoomOutListView"
                        ItemTemplate="{StaticResource stageZoomOutItemTemplate}"
                        ItemsSource="{x:Bind cVSStageGroups.View.CollectionGroups, Mode=OneWay}"
                        SelectionMode="None" />
                </SemanticZoom.ZoomedOutView>
            </SemanticZoom>
            <ListView
                x:Name="battleListView"
                Grid.Column="1"
                MinWidth="180"
                ItemTemplate="{StaticResource battleItemTemplate}"
                ItemsSource="{x:Bind stageZoomInListView.SelectedItem.(m:Stage.Battles), Mode=OneWay}" />
            <ListView
                x:Name="shikigamiListView"
                Grid.Column="2"
                MinWidth="180"
                ItemTemplate="{StaticResource shikigamiItemTemplate}"
                ItemsSource="{x:Bind battleListView.SelectedItem.(m:Battle.ShikigamiBattles), Mode=OneWay}" />
        </Grid>

    </RelativePanel>

    <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="AdaptiveVisualStateGroup">
            <VisualState x:Name="VisualStateNarrow">
                <VisualState.StateTriggers>
                    <AdaptiveTrigger MinWindowWidth="{StaticResource NarrowMinWidth}" />
                </VisualState.StateTriggers>
                <VisualState.Setters>
                    <!--  TODO: change properties for narrow view  -->
                </VisualState.Setters>
            </VisualState>
            <VisualState x:Name="VisualStateNormal">
                <VisualState.StateTriggers>
                    <AdaptiveTrigger MinWindowWidth="{StaticResource NormalMinWidth}" />
                </VisualState.StateTriggers>
                <VisualState.Setters>
                    <!--  TODO: change properties for normal view  -->
                </VisualState.Setters>
            </VisualState>
            <VisualState x:Name="VisualStateWide">
                <VisualState.StateTriggers>
                    <AdaptiveTrigger MinWindowWidth="{StaticResource WideMinWidth}" />
                </VisualState.StateTriggers>
                <VisualState.Setters>
                    <!--  TODO: change properties for wide view  -->
                </VisualState.Setters>
            </VisualState>
        </VisualStateGroup>
    </VisualStateManager.VisualStateGroups>
</Page>
